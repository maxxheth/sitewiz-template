services:
  %SITE_NAME%:
    image: php:8.4-apache
    container_name: %SITE_NAME%
    deploy:
      resources:
        limits:
          memory: 512M
    volumes:
      # Mount the entire HydePHP project
      - .:/var/www/html
      # Apache configuration
      - ./docker/apache-site.conf:/etc/apache2/sites-available/000-default.conf:ro
      # Logs
      - ./storage/logs:/var/www/html/storage/logs
    working_dir: /var/www/html
    restart: always
    environment:
      - PAGER=more
      - MEMORY_LIMIT=512M
      - APP_ENV=production
      - APP_URL=%URL%
      - SITE_NAME=%SITE_NAME%
      - SITE_DOMAIN=%DOMAIN%
    networks:
      - web
    labels:
      - "ci.groups=website,hydephp,static"
      - "traefik.enable=true"
      - "traefik.http.routers.%SITE_NAME%.rule=Host(`%DOMAIN%`) || Host(`www.%DOMAIN%`)"
      - "traefik.http.routers.%SITE_NAME%.tls=true"
      - "traefik.http.routers.%SITE_NAME%.tls.certresolver=lets-encrypt"
      - "traefik.http.services.%SITE_NAME%.loadbalancer.server.port=80"
      - "traefik.docker.network=web"
    command: >
      sh -c "
        # Install system dependencies
        apt-get update && apt-get install -y \
          git \
          curl \
          libpng-dev \
          libonig-dev \
          libxml2-dev \
          zip \
          unzip \
          nodejs \
          npm && \
        
        # Clean apt cache
        apt-get clean && \
        rm -rf /var/lib/apt/lists/* && \
        
        # Install PHP extensions
        docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd && \
        
        # Enable Apache modules
        a2enmod rewrite headers && \
        
        # Install Composer if not present
        if [ ! -f /usr/local/bin/composer ]; then \
          curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer; \
        fi && \
        
        # Install Bun if not present
        if [ ! -f /usr/local/bin/bun ]; then \
          curl -fsSL https://bun.sh/install | bash && \
          ln -s /root/.bun/bin/bun /usr/local/bin/bun; \
        fi && \
        
        # Set proper permissions
        chown -R www-data:www-data /var/www/html && \
        chmod -R 755 /var/www/html && \
        chmod -R 775 /var/www/html/storage && \
        
        # Build the site if needed
        if [ ! -d vendor ]; then \
          su -s /bin/sh www-data -c 'composer install --no-dev --optimize-autoloader'; \
        fi && \
        
        if [ ! -d node_modules ]; then \
          su -s /bin/sh www-data -c 'bun install'; \
        fi && \
        
        # Build assets
        su -s /bin/sh www-data -c 'bun run build' && \
        
        # Build static site
        su -s /bin/sh www-data -c 'php hyde build' && \
        
        # Set document root to _site directory
        sed -i 's|/var/www/html|/var/www/html/_site|g' /etc/apache2/sites-available/000-default.conf && \
        sed -i 's|/var/www/html|/var/www/html/_site|g' /etc/apache2/apache2.conf && \
        
        # Start Apache
        apache2-foreground
      "

  # Optional: Add a build service for development/rebuilding
  %SITE_NAME%-builder:
    image: php:8.4-cli
    container_name: %SITE_NAME%-builder
    profiles: ["build"]
    volumes:
      - .:/app
    working_dir: /app
    command: >
      sh -c "
        # Install dependencies
        apt-get update && apt-get install -y \
          git \
          curl \
          libpng-dev \
          libonig-dev \
          libxml2-dev \
          zip \
          unzip && \
        
        # Install PHP extensions
        docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd && \
        
        # Install Composer
        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \
        
        # Install Bun
        curl -fsSL https://bun.sh/install | bash && \
        export PATH=/root/.bun/bin:$$PATH && \
        
        # Install dependencies
        composer install --no-dev --optimize-autoloader && \
        bun install && \
        
        # Build assets and site
        bun run build && \
        php hyde build
      "

networks:
  web:
    name: web
    external: true
